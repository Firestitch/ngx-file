@import '~@angular/material/theming';

$phone-width-max: 767.98px;
$tablet-width-min: 768px;
$tablet-width-max: 991.98px;
$desktop-width-min: 992px;

@mixin apply-to($ltgt, $device) {
  $extrema: null;
  $boundary-target: null;
  $delta: null;

  @if $ltgt == less-than {
    $extrema: max;
    $delta: -1;
  } @else if $ltgt == greater-than {
    $extrema: min;
    $delta: +1;
  }

  @if $device == phone {
    @if $ltgt == less-than {
      $boundary-target: $phone-width-max;
    } @else if $ltgt == greater-than {
      $boundary-target: $tablet-width-min;
    }
  } @else if $device == tablet {
    @if $ltgt == less-than {
      $boundary-target: $tablet-width-min;
    } @else if $ltgt == greater-than {
      $boundary-target: $tablet-width-max;
    }
  } @else if $device == desktop {
    $boundary-target: $desktop-width-min;
  }

  @media only screen and (#{$extrema}-width: $boundary-target) {
    @content;
  }
}

@mixin phone {
  @media only screen and (max-width: #{$phone-width-max}) {
    @content;
  }
}

@mixin tablet {
  @media only screen and (min-width: #{$tablet-width-min}) and (max-width: #{$tablet-width-max}) {
    @content;
  }
}

@mixin desktop {
  @media only screen and (min-width: #{$desktop-width-min}) {
    @content;
  }
}

@mixin action-positions {
  &.top-left {
    top: 8px;
    right: 8px;
  }

  &.top-right {
    top: 8px;
    right: 8px;
  }

  &.bottom-left {
    bottom: 8px;
    left: 8px;
  }

  &.bottom-right {
    bottom: 8px;
    right: 8px;
  }
}

@mixin fs-file($theme) {

  $primary: mat-palette($theme);

  fs-file {
    fs-file-dragover-message {
      .dragover-message {
        z-index: 999;
        display: none;
        .content {
          background-color: mat-color($primary);
        }
        .bounce {
          color: mat-color($primary);
        }
      }
    }
    &.dragover {
      fs-file-dragover-message {
        .dragover-message {
          display: flex !important;
        }
      }
    }
  }

fs-file-picker {
  &.dragover {
    .wrap {
      &:after {
        border-color: mat-color($primary);
      }
    }
  }
}

fs-file-preview {    
  border: 1px #efefef solid;
  display: inline-block;
  position: relative;
  vertical-align: top;
  overflow: hidden;
  border-radius: 3px;

  .file-details {
    flex-direction: column;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    padding: 5px;

    .file-icon {
      position: relative;
    }

    .file-ext {
      font-weight: bold;
      text-align: center;
      text-transform: uppercase;
      font-size: 20px;
      position: absolute;
      width: 100%;
      bottom: 28px;
      color: #fff;
    }

    mat-icon {
      font-size: 90px;
      width: 90px;
      height: 90px;
      color: #ccc;

    }

    .file-name {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding: 0 5px;
      font-size: 75%;
      text-align: center;
      width: 100%;
    }
  }

  .preview-container {
    overflow: hidden;
    box-sizing: border-box;
    margin: auto;
  }

  .actions {
    position: absolute;

    @include apply-to(less-than, phone) {
      display: block;
    }

    width: 100%;
    height: 100%;
    top: 0;
    left: 0;

    .action {

      position: absolute;
      cursor: pointer;

      &.hide {
        display: none;
      }

      @include action-positions();

      @include apply-to(greater-than, phone) {

        &.top-left, &.top-right, &.bottom-left, &.bottom-right {
          transition: top .3s, bottom .3s, left .3s, right .3s;
        }

        &.top-left {
          top: -50px;
          right: -50px;
        }

        &.top-right {
          top: -50px;
          right: -50px;
        }

        &.bottom-left {
          bottom: -50px;
          left: -50px;
        }

        &.bottom-right {
          bottom: -50px;
          right: -50px;
        }
      }
    }
  }

  .preview-container {

    &.type-image {
      background-image: /* tint image */ linear-gradient(to right, rgb(255 255 255 / 75%), rgb(255 255 255 / 75%)), 
      /* checkered effect */ linear-gradient(to right, black 50%, white 50%), 
      linear-gradient(to bottom, black 50%, white 50%);
      background-blend-mode: normal, difference, normal;
      background-size: 20px 20px;
    }
  }

  &:hover,
  &:focus {
    .actions {
      display: block;

      .action {
        @include action-positions();
      }
    }
  }

  img {
    display: block;
    object-fit: cover;
    width: 100%;
    height: 100%;
  }

  .mat-button-wrapper {
    padding: 0;
    line-height: 15px !important;
  }

  .spinner {
    position: absolute;
    top: 50%;
    left: 50%;
    margin-left: -25%;
    margin-top: -25%;
  }
}

fs-file-previews {
  margin-top: -10px;
  display: block;

  .queue {
    position: relative;
    display: block;
  }

  fs-file-preview {
    margin-right: 10px;
    margin-top: 10px;

    &:last-child {
      margin-right: 0;
    }
  }
}

  @media only screen and (max-width: 550px) {
    fs-file-preview .actions {
        display: block;
        background: none;
    }
  }
}

